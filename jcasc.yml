jenkins:
  agentProtocols:
  - "Diagnostic-Ping"
  - "JNLP4-connect"
  - "OperationsCenter2"
  - "Ping"
  clouds:
  - kubernetes:
      connectTimeout: 6
      containerCapStr: "10"
      credentialsId: "k8s-core-demo-jenkins-sa"
      defaultsProviderTemplate: "default-jnlp"
      maxRequestsPerHostStr: "32"
      name: "kubernetes"
      namespace: "core-demo"
      readTimeout: 15
      serverCertificate: |-
        ${core-workshop-cert}
      templates:
      - containers:
        - args: "/var/jenkins_config/jenkins-agent"
          command: "/bin/sh"
          image: "gcr.io/technologists/k8s-jnlp-agent:0.0.5"
          livenessProbe:
            failureThreshold: 0
            initialDelaySeconds: 0
            periodSeconds: 0
            successThreshold: 0
            timeoutSeconds: 0
          name: "jnlp"
          ttyEnabled: true
        label: "default-jnlp"
        name: "default-jnlp"
        nodeSelector: "type=master"
        nodeUsageMode: "NORMAL"
        volumes:
        - configMapVolume:
            configMapName: "jenkins-agent"
            mountPath: "/var/jenkins_config"
        workspaceVolume:
          emptyDirWorkspaceVolume:
            memory: false
        yaml: |-
          apiVersion: v1
          kind: Pod
          metadata:
            name: default-jnlp
          spec:
            containers:
            - args:
              - /var/jenkins_config/jenkins-agent
              command:
              - /bin/sh
              image: gcr.io/technologists/k8s-jnlp-agent:0.0.5
              imagePullPolicy: IfNotPresent
              name: jnlp
              resources: {}
              tty: true
              securityContext:
                runAsUser: 1000
            securityContext:
              runAsUser: 1000
        yamlMergeStrategy: "merge"
        yamls:
        - |-
          apiVersion: v1
          kind: Pod
          metadata:
            name: default-jnlp
          spec:
            containers:
            - args:
              - /var/jenkins_config/jenkins-agent
              command:
              - /bin/sh
              image: gcr.io/technologists/k8s-jnlp-agent:0.0.5
              imagePullPolicy: IfNotPresent
              name: jnlp
              resources: {}
              tty: true
              securityContext:
                runAsUser: 1000
            securityContext:
              runAsUser: 1000
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: false
  disableRememberMe: false
  markupFormatter:
    rawHtml:
      disableSyntaxHighlighting: true
  numExecutors: 0
unclassified:
  gitLabServers:
    servers:
    - credentialsId: "gitlab-beedemo-dev-token"
      manageSystemHooks: true
      manageWebHooks: true
      name: "gitlab-beedemo-dev"
      serverUrl: "https://gitlab.com"
  githubpluginconfig:
    configs:
    - name: "GitHub - CloudBees Days"
      credentialsId: "cbdays-github-token-secret"
      manageHooks: true
  globalDefaultFlowDurabilityLevel:
    durabilityHint: SURVIVABLE_NONATOMIC
  globallibraries:
    libraries:
    - defaultVersion: "master"
      name: "cb-days"
      retriever:
        modernSCM:
          scm:
            github:
              credentialsId: "cbdays-github-token"
              repoOwner: "cloudbees-days"
              repository: "pipeline-library"
kube:
  podTemplatesConfiguration:
    templates:
    - containers:
      - args: "cat"
        command: "/bin/sh -c"
        image: "node:8.12.0-alpine"
        livenessProbe:
          failureThreshold: 0
          initialDelaySeconds: 0
          periodSeconds: 0
          successThreshold: 0
          timeoutSeconds: 0
        name: "nodejs"
        resourceLimitCpu: "1"
        resourceLimitMemory: "1Gi"
        resourceRequestCpu: "500m"
        resourceRequestMemory: "512Mi"
        ttyEnabled: true
      label: "nodejs-app"
      name: "nodejs-app"
      workspaceVolume:
        emptyDirWorkspaceVolume:
          memory: false
      yaml: |-
        apiVersion: v1
        kind: Pod
        metadata:
          name: default-jnlp
        spec:
          securityContext:
            runAsUser: 1000
      yamlMergeStrategy: "override"
      yamls:
      - |-
        apiVersion: v1
        kind: Pod
        metadata:
          name: default-jnlp
        spec:
          securityContext:
            runAsUser: 1000
    - containers:
      - args: "cat"
        command: "/bin/sh -c"
        image: "openjdk:10-jdk-slim-sid"
        livenessProbe:
          failureThreshold: 0
          initialDelaySeconds: 0
          periodSeconds: 0
          successThreshold: 0
          timeoutSeconds: 0
        name: "jdk10"
        resourceLimitCpu: "1"
        resourceLimitMemory: "1Gi"
        resourceRequestCpu: "500m"
        resourceRequestMemory: "512Mi"
        ttyEnabled: true
      label: "jdk10"
      name: "jdk10"
      workspaceVolume:
        emptyDirWorkspaceVolume:
          memory: false
      yaml: |-
        apiVersion: v1
        kind: Pod
        metadata:
          name: default-jnlp
        spec:
          securityContext:
            runAsUser: 1000
      yamlMergeStrategy: "override"
      yamls:
      - |-
        apiVersion: v1
        kind: Pod
        metadata:
          name: default-jnlp
        spec:
          securityContext:
            runAsUser: 1000
    - containers:
      - args: "cat"
        command: "/bin/sh -c"
        image: "openjdk:8-jdk-slim"
        livenessProbe:
          failureThreshold: 0
          initialDelaySeconds: 0
          periodSeconds: 0
          successThreshold: 0
          timeoutSeconds: 0
        name: "jdk8"
        resourceLimitCpu: "1"
        resourceLimitMemory: "1Gi"
        resourceRequestCpu: "500m"
        resourceRequestMemory: "512Mi"
        ttyEnabled: true
      label: "jdk8"
      name: "jdk8"
      workspaceVolume:
        emptyDirWorkspaceVolume:
          memory: false
      yaml: |-
        apiVersion: v1
        kind: Pod
        metadata:
          name: default-jnlp
        spec:
          securityContext:
            runAsUser: 1000
      yamlMergeStrategy: "override"
      yamls:
      - |-
        apiVersion: v1
        kind: Pod
        metadata:
          name: default-jnlp
        spec:
          securityContext:
            runAsUser: 1000
jobs:
  - url: https://raw.githubusercontent.com/kypseli/demo-mm-jcasc/dev/groovy/beedCdGitHubOrg.groovy
  - script: >
      organizationFolder('/dev/beedemo-hellworld') {
        description("GitLab group folder for beedemo-hellworld group")
        displayName('beedemo-hellworld - GitLab Group')
        // "Projects"
        organizations {
          gitLabSCMNavigator {
            projectOwner("beedemo-helloworld")
            credentialsId("gitlab-beedemo-dev-user-pwd")
            serverName("gitlab-beedemo-dev")
            // "Traits" ("Behaviours" in the GUI) that are "declarative-compatible"
            traits {
              subGroupProjectDiscoveryTrait() // discover projects inside subgroups
              gitLabBranchDiscovery {
                strategyId(3) // discover all branches
              }
              originMergeRequestDiscoveryTrait {
                strategyId(1) // discover MRs and merge them with target branch
              }
              gitLabTagDiscovery() // discover tags
            }
          }
        }
        // "Traits" ("Behaviours" in the GUI) that are NOT "declarative-compatible"
        // For some 'traits, we need to configure this stuff by hand until JobDSL handles it
        // https://issues.jenkins.io/browse/JENKINS-45504
        configure { node ->
            def traits = node / navigators / 'io.jenkins.plugins.gitlabbranchsource.GitLabSCMNavigator' / traits
            traits << 'io.jenkins.plugins.gitlabbranchsource.ForkMergeRequestDiscoveryTrait' {
                strategyId('2')
                trust(class: 'io.jenkins.plugins.gitlabbranchsource.ForkMergeRequestDiscoveryTrait$TrustPermission')
            }
        }
        // "Project Recognizers"
        projectFactories {
            workflowMultiBranchProjectFactory {
                scriptPath 'Jenkinsfile'
            }
        }
        // "Orphaned Item Strategy"
        orphanedItemStrategy {
          discardOldItems {
            daysToKeep(-1)
            numToKeep(-1)
          }
        }
        // "Scan Organization Folder Triggers" : 1 day
        // We need to configure this stuff by hand because JobDSL only allow 'periodic(int min)' for now
        configure { node ->
          node / triggers / 'com.cloudbees.hudson.plugins.folder.computed.PeriodicFolderTrigger' {
            spec('H H * * *')
            interval(86400000)
          }
        }
      }
credentials:
  system:
    domainCredentials:
    - domain :
        name: "github.com"
        description: "GitHub"
      credentials:
        - string:
            scope: GLOBAL
            id: cbdays-github-token-secret
            description: "GitHub PAT for beedemo-ops from JCasC - secret text"
            secret: ${github-ops-token}
        - usernamePassword:
            scope: GLOBAL
            id: cbdays-github-token
            description: "GitHub PAT for beedemo-ops from JCasC"
            username: beedemo-ops
            password: ${github-ops-token}}
        - usernamePassword:
            scope: GLOBAL
            id: beedemo-dev-github-username-pat
            description: "GitHub PAT for beedemo-dev from JCasC"
            username: beedemo-dev
            password: ${github-beedemo-dev-pat}
    - credentials:
      - gitlabPersonalAccessToken:
          description: "Gitlab Token fro beedemo-dev"
          id: gitlab-beedemo-dev-token
          scope: GLOBAL
          token: ${gitlab-beedemo-dev-pat}
      - usernamePassword:
          scope: GLOBAL
          id: gitlab-beedemo-dev-user-pwd
          description: "GitLab username/password for beedemo-dev from JCasC"
          username: beedemo-dev
          password: ${gitlab-beedemo-dev-password}"
